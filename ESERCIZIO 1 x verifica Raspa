import java.util.Scanner;

class Contatto {
    private String nome;
    private String numeroDiTelefono;
    private boolean nascosto;

    public Contatto(String nome, String numeroDiTelefono, boolean nascosto) {
        this.nome = nome;
        this.numeroDiTelefono = numeroDiTelefono;
        this.nascosto = nascosto;
    }

    public String getNome() {
        return nome;
    }

    public String getNumeroDiTelefono() {
        return nascosto ? "null" : numeroDiTelefono;
    }

    public boolean isNascosto() {
        return nascosto;
    }

    public void setNascosto(boolean nascosto) {
        this.nascosto = nascosto;
    }

    @Override
    public String toString() {
        return "Nome: " + nome + ", Telefono: " + getNumeroDiTelefono();
    }
}

class Rubrica {
    private Contatto[] contatti;
    private String[] chiamateRecenti;
    private int contattiCount;
    private int chiamateCount;
    private String password;

    public Rubrica(String password) {
        this.contatti = new Contatto[100];
        this.chiamateRecenti = new String[10];
        this.contattiCount = 0;
        this.chiamateCount = 0;
        this.password = password;
    }

    public void aggiungiContatto(Contatto contatto) {
        if (contattiCount < contatti.length) {
            contatti[contattiCount++] = contatto;
        } else {
            System.out.println("Rubrica piena, impossibile aggiungere nuovi contatti.");
        }
    }

    public void rimuoviContatto(String nome) {
        for (int i = 0; i < contattiCount; i++) {
            if (contatti[i].getNome().equals(nome)) {
                contatti[i] = contatti[--contattiCount];
                contatti[contattiCount] = null;
                break;
            }
        }
    }

    public void nascondiContatto(String nome, boolean nascondi) {
        for (int i = 0; i < contattiCount; i++) {
            if (contatti[i].getNome().equals(nome)) {
                contatti[i].setNascosto(nascondi);
                break;
            }
        }
    }

    public Contatto[] getContatti(boolean mostraNascosti, String password) {
        if (mostraNascosti && this.password.equals(password)) {
            return contatti.clone();
        }
        Contatto[] contattiVisibili = new Contatto[contattiCount];
        int count = 0;
        for (int i = 0; i < contattiCount; i++) {
            if (!contatti[i].isNascosto()) {
                contattiVisibili[count++] = contatti[i];
            }
        }
        return java.util.Arrays.copyOf(contattiVisibili, count);
    }

    public void aggiungiChiamataRecente(String numeroDiTelefono) {
        if (chiamateCount < chiamateRecenti.length) {
            chiamateRecenti[chiamateCount++] = numeroDiTelefono;
        } else {
            System.arraycopy(chiamateRecenti, 1, chiamateRecenti, 0, chiamateRecenti.length - 1);
            chiamateRecenti[chiamateRecenti.length - 1] = numeroDiTelefono;
        }
    }

    public String[] getChiamateRecenti() {
        return java.util.Arrays.copyOf(chiamateRecenti, chiamateCount);
    }
}

public class Main {
    private static final Scanner scanner = new Scanner(System.in);
    private static final Rubrica rubrica = new Rubrica("passwordSegreta");

    public static void main(String[] args) {
        while (true) {
            System.out.println("1. Aggiungi Contatto");
            System.out.println("2. Rimuovi Contatto");
            System.out.println("3. Nascondi/Mostra Contatto");
            System.out.println("4. Visualizza Contatti");
            System.out.println("5. Aggiungi Chiamata Recente");
            System.out.println("6. Visualizza Chiamate Recenti");
            System.out.println("7. Esci");
            int scelta = Integer.parseInt(scanner.nextLine());

            switch (scelta) {
                case 1:
                    aggiungiContatto();
                    break;
                case 2:
                    rimuoviContatto();
                    break;
                case 3:
                    nascondiMostraContatto();
                    break;
                case 4:
                    visualizzaContatti();
                    break;
                case 5:
                    aggiungiChiamataRecente();
                    break;
                case 6:
                    visualizzaChiamateRecenti();
                    break;
                case 7:
                    System.exit(0);
                    break;
                default:
                    System.out.println("Scelta non valida");
            }
        }
    }

    private static void aggiungiContatto() {
        System.out.println("Inserisci nome:");
        String nome = scanner.nextLine();
        System.out.println("Inserisci numero di telefono:");
        String numeroDiTelefono = scanner.nextLine();
        System.out.println("Nascondere il contatto? (sì/no):");
        boolean nascosto = scanner.nextLine().equalsIgnoreCase("sì");
        rubrica.aggiungiContatto(new Contatto(nome, numeroDiTelefono, nascosto));
    }

    private static void rimuoviContatto() {
        System.out.println("Inserisci nome da rimuovere:");
        String nome = scanner.nextLine();
        rubrica.rimuoviContatto(nome);
    }

    private static void nascondiMostraContatto() {
        System.out.println("Inserisci nome da nascondere/mostrare:");
        String nome = scanner.nextLine();
        System.out.println("Nascondere il contatto? (sì/no):");
        boolean nascosto = scanner.nextLine().equalsIgnoreCase("sì");
        rubrica.nascondiContatto(nome, nascosto);
    }

    private static void visualizzaContatti() {
        System.out.println("Mostrare contatti nascosti? (sì/no):");
        boolean mostraNascosti = scanner.nextLine().equalsIgnoreCase("sì");
        if (mostraNascosti) {
            System.out.println("Inserisci password:");
            String password = scanner.nextLine();
            for (Contatto contatto : rubrica.getContatti(true, password)) {
                if (contatto != null) {
                    System.out.println(contatto);
                }
            }
        } else {
            for (Contatto contatto : rubrica.getContatti(false, "")) {
                if (contatto != null) {
                    System.out.println(contatto);
                }
            }
        }
    }

    private static void aggiungiChiamataRecente() {
        System.out.println("Inserisci numero di telefono della chiamata recente:");
        String numeroDiTelefono = scanner.nextLine();
        rubrica.aggiungiChiamataRecente(numeroDiTelefono);
    }

    private static void visualizzaChiamateRecenti() {
        for (String chiamata : rubrica.getChiamateRecenti()) {
            if (chiamata != null) {
                System.out.println("Chiamato: " + chiamata);
            }
        }
    }
}
